<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox4.Text" xml:space="preserve">
    <value>Hoon-Hee LEE, Ph.D., Senior Researcher
Korea Institute of Industrial Technology/Dongnam Division/
Precision Mechanical Process and Control R&amp;D Group
Jinju Ppuri Technology Support Center
E-mail : hhlee84@kitech.re.kr
</value>
  </data>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>ㅇ 제원
   - 식별번호 : 030232022-1
   - 모델명 DTfM (Digital Twin for Manufacturing) Ultimate Platform 
     Software Development Kit (SDK)
   - 구성 : Installation USB

ㅇ 사용 환경
   - Windows 10 환경
   - Microsoft Visual Studio Community 2022 (64-bit) - Current Version 
     17.4.4 2022 Microsoft Corp.

ㅇ Installed products:</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>(1) 계약내용 및 이의의 해석
ㅇ 계약자는 계약서 내용에 기술되는 기기 등 일체를 공급하여야 하며, 본 규격서에 기술되어 있지 않은 사항 또는 불명확하다고 생각되는 사항은 계약 전에 한국생산기술연구원의 해석 및 의견을 확인하여야 하며, 계약 후에는 한국생산기술연구원의 해석에 따라야 한다.
ㅇ 계약자는 본 규격서에 명기되지 않았더라도 기능적, 효율적인 운용에 필요한 기기, 예비품 등은 계약사항에 포함된 것으로 간주하고 납품하여야 한다.
  
(2) 계약자의 책무 
ㅇ 계약자는 장비의 제작, 검사, 운반, 설치 및 시운전에 대한 전반적인 책임이 있으며, 모든 부품은 정상동작 상태 하에서 파손 또는 변형이 없이 충분한 강도와 성능을 보장하여야 한다.
ㅇ 계약자는 시험장비 제작 전 한국생산기술연구원으로 부터 제작도면의 승인을 득하여야 한다.
ㅇ 장비를 납품함에 있어 꼭 필요한 부분의 누락 또는 생략이 되었을 경우 계약자는 이를 무상으로 보완하여야 한다.
ㅇ 본 사양에 의해 납품된 장비의 하자 등 문제점 발생 시 이에 대한 책임은 계약자에게 있다.
ㅇ 본 제품을 납품하여 설치 및 시운전시 계약자 측의 기술자는 제품의 설치 및 시운전을 포함한 정상적인 가동에 필요한 모든 기술적인 업무를 지원하여야 한다. 
ㅇ 본 장비의 설계, 제작, 시험 및 납품, 유지보수와 관련하여 타인 또는 외국의 권리나 특허, 실용신안, 상표, 의장(공업소유권) 등의 권리보호에 따른 문제점이 발생되지 않도록 하여야 하며 발생 시 이에 대한 처리책임은 계약자에게 있다.
  
(3) 포장 및 운반
ㅇ 포장은 운반 및 설치현장의 습도, 기후조건 등을 감안하여 장비 및 부품의 운반 또는 보관 중 손상이 발생하지 않도록 견고한 포장을 하여야 하며, 외부에서 보기 쉬운 곳에 색채 및 기호 등으로 각 기기의 번호, 명칭 등을 표시하여야 한다.
ㅇ 장비의 운반중 장비의 기능 및 성능에 영향을 미치는 손상이 발생했을 경우에는 이에 대한 사후처리 및 원형복구는 계약자의 책임 하에 이행하여야 한다.


(4) 설치
ㅇ 설치작업 이전에 반드시 지정된 설치장소에 대한 기초상태 등 제반여건을 사전 확인한 후에 기계를 설치하여야 하며, 설치와 관련되는 모든 비용(장비, 인원, 동력 등)은 계약자가 부담한다.
ㅇ 또한 신규장비 설치공간 확보를 위해 기존장비의 이동과 재배치가 필요하며 기존 장비의 이설과 시운전 등의 작업을 포함한다. 이와 관련된 비용 역시 계약자가 부담한다.
  
(5) 안전대책 및 책임
ㅇ 계약자는 시운전 완료시까지 제반 안전대책을 수립하여 안전에 대비하여야 하며, 안전사고 발생 시 이에 따른 민․형사상의 책임은 계약자에게 있다.
  
(6) 교육훈련(기술지도)
ㅇ 계약자는 필요시, 시험장비의 운용이 가능하도록 사용법 및 기타 필요한 사항을 사용 담당자를 대상으로 납품완료와 동시에 교육을 실시하여야 한다. 
ㅇ 교육 일정 등 세부적인 사항에 대하여는 한국생산기술연구원과 사전 협의 하여 결정한다.
ㅇ 장비 작동 매뉴얼은 별도 작성하여 제출하여야 한다.
  
(7) 시운전
ㅇ 계약자는 시운전에 필요한 모든 사항은 준비한 시운전 계획 및 승인된 시험 점검을 위해 감독관 입회하에 시운전을 시행하여야 하며, 시운전 불합격 시는 즉각 결함부분을 시정하여 재시행하여야 한다.
  
(8) 보증
ㅇ 납품되는 모든 장비에 대하여 하자보증기간은 검수완료일로부터 6개월으로 하며 동 기간 안에 설계, 제작, 설치 공사 및 재결함 등으로 고장 또는 파손되었을 경우 제작업체는 한국생산기술연구원에서 지정하는 기일 내에 무상으로 신속한 복구를 하여야 한다.
ㅇ 하자보증기간 만료 후에도 계약자는 부품, 소모품, 기타 운용에 필요한 모든 부속장비 및 정비를 요구 시 즉시 공급해야 한다.
  
(9) 운용지원(AFTER SERVICE)
ㅇ 계약자는 제작 공급한 장비에 대한 신속하고 완벽한 운용지원(After Service)을 위하여 지원체제를 갖추어야 한다.
</value>
  </data>
  <data name="richTextBox7.Text" xml:space="preserve">
    <value>Warning: This computer program is protected by copyright law and international treaties. Unauthorized reproduction or distribution of this program, or any portion of it, may result in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law.</value>
  </data>
  <data name="richTextBox6.Text" xml:space="preserve">
    <value>1-1. 적용 범위
DTfM(Digital Twin for Manufacturing) Software의 기능을 확장하였으며, 다양한 패키지, 라이브러리를 통하여 실제 제조 현장의 물리적 자산 형태의 모델을 구축할 수 있음. 디지털 트윈 시스템 구축을 위한 펌프, 유체 유동 등에 대한 다양한 모듈들을 제공하고 있으며, 3D-Model Visualization, Industry Network Protocol 등의 패키지를 통해 현장 시스템을 반영한 디티털 트윈 시스템을 구축할 수 있음.

1-2. 특징
DTfM(Digital Twin for Manufacturing) Software Development (SDK)와 DTfM Software Development Coder (CC)를 연동하여 현장에 적합한 라이브러리 및 패키지를 적용할 수 있으며, C/C++, Matlab, Python 언어를 이용한 응용 프로그램 사용, 생성이 가능함. 3D-Model Visualization 패키지를 통해 현장 시스템에 대한 3D 모델을 구축할 수 있음.</value>
  </data>
</root>